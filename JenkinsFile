pipeline {
    agent any

    environment {
        IMAGE_NAME = 'localhost:5000/my-python-app'
        IMAGE_TAG = "latest-${env.BUILD_ID}"
        REMOTE_USER = 'ec2-user' 
        REMOTE_HOST = '172.31.16.216'
        COMPOSE_FILE = 'docker-compose.yml'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from SCM
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                // Build the Docker image with a unique tag
                sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
            }
        }

        stage('Push to Local Registry') {
            steps {
                // Push the Docker image to the local registry
                sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
            }
        }

        stage('Deploy with Docker Compose') {
            environment {
                COMPOSE_FILE = 'docker-compose.yml'
            }
            steps {
                // Use the environment variables to deploy with Docker Compose
               withCredentials([sshUserPrivateKey(credentialsId: '54.242.169.192', keyFileVariable: 'SSH_KEY')]) {
                    // Copy docker-compose.yml to the remote node
                    sh "chmod 600 $SSH_KEY"
                    sh "scp -i \$SSH_KEY -o StrictHostKeyChecking=no ${COMPOSE_FILE} ${REMOTE_USER}@${REMOTE_HOST}:/home/${REMOTE_USER}/app-directory/${COMPOSE_FILE}"

                    // Execute Docker Compose commands on the remote node
                    sh "ssh -i \$SSH_KEY -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} 'export IMAGE_NAME=${IMAGE_NAME} && export IMAGE_TAG=${IMAGE_TAG} && cd /home/${REMOTE_USER}/app-directory && docker-compose down && docker-compose up -d'"
                }
            }
        }
    }

    post {
        always {
            // Clean up the workspace
            cleanWs()
        }
    }
}
